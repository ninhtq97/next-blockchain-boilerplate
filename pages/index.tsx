import Button from 'components/Button';
import Modal from 'components/Modal';
import Pagination from 'components/Pagination';
import Select from 'components/Select';
import { Web3Context } from 'contexts';
import useWeb3 from 'hooks/useWeb3';
import useWeb3Event from 'hooks/useWeb3Event';
import { Layout } from 'layouts';
import NestedLayout from 'layouts/NestedLayout';
import Head from 'next/head';
import { useContext, useState } from 'react';
import Datepicker from 'react-tailwindcss-datepicker';
import type { NextPageWithLayout } from './_app';

const Home: NextPageWithLayout = () => {
  const { connect, disconnect } = useWeb3();
  useWeb3Event();

  const { address, chainId } = useContext(Web3Context);

  const [value, setValue] = useState({
    startDate: new Date(),
    endDate: new Date(),
  });

  const handleValueChange = (newValue) => {
    console.log('newValue:', newValue);
    setValue(newValue);
  };

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="border">
        <Datepicker
          useRange={false}
          asSingle={true}
          value={value}
          onChange={handleValueChange}
        />
      </div>

      <Button onClick={connect}>Connect Wallet</Button>
      <Button onClick={disconnect}>Disconnect Wallet</Button>

      <div>{address}</div>
      <div>{chainId}</div>

      <Modal
        renderLink={({ onOpen }) => (
          <div className="" onClick={onOpen}>
            Open Modal
          </div>
        )}
        renderContent={({}) => (
          <div>
            Content Modal
            <Pagination
              current={1}
              total={10}
              onChange={(attrs) => {
                console.log('Attrs:', attrs);
              }}
            />
          </div>
        )}
      />

      <Select
        options={[
          { label: 'A', value: 'a' },
          { label: 'B', value: 'b' },
        ]}
        onChange={(selected) => {
          console.log('Selected:', selected);
        }}
      />
    </div>
  );
};

Home.getLayout = function getLayout(page: React.ReactElement) {
  return (
    <Layout>
      <NestedLayout name="home">{page}</NestedLayout>
    </Layout>
  );
};

export default Home;
